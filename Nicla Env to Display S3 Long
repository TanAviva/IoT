//
// Nicla Sense Env → T-Display S3 Long (ESP32-S3 + AXS15231B, 180×640)
//   - Reads Temp/RH, TVOC, est. CO2, Indoor IAQ (ZMOD4410)
//   - Reads NO2, O3, Outdoor AQ (ZMOD4510)
//   - Groups metrics & colors Outdoor AQ per Arduino app note
//
// References:
//  - Nicla Sense Env user manual & board usage over I2C/ESLOV (docs)           [1]
//  - Outdoor monitor app note: NO2/O3/Outdoor AQ & color feedback               [2]
//  - Elevator app note: Indoor IAQ/TVOC/eCO2 presentation                       [3]
//  - Arduino_NiclaSenseEnv library feature set/API                              [4]
//
// [1] https://docs.arduino.cc/tutorials/nicla-sense-env/user-manual/
// [2] https://docs.arduino.cc/tutorials/nicla-sense-env/environmental-monitor-application-note/
// [3] https://docs.arduino.cc/tutorials/nicla-sense-env/elevator-monitoring-application-note/
// [4] https://github.com/arduino-libraries/Arduino_NiclaSenseEnv
//

#include "AXS15231B.h"
#include <Arduino.h>
#include <Wire.h>
#include <TFT_eSPI.h>
#include <Arduino_NiclaSenseEnv.h>

// ---------- I2C pins (choose one set) ----------
// A) Common on S3 Long (used by many examples)
#define I2C_SDA_PIN 15
#define I2C_SCL_PIN 10
// B) If you use the on-board Qwiic header on some boards:
// #define I2C_SDA_PIN 43
// #define I2C_SCL_PIN 44

TFT_eSPI tft(180, 640);
TFT_eSprite sprite(&tft);
NiclaSenseEnv nicla(Wire);

// ---------- Theme ----------
#define COL_BG     0x0000
#define COL_PANEL  0x0842
#define COL_FRAME  0x3186
#define COL_TEXT   0xFFFF
#define COL_MUTED  0xAD55
#define COL_ACCENT 0xFDA0
#define COL_CYAN   0x07FF
#define COL_WARN   0xFFE0
#define COL_GOOD   0x07E0
#define COL_BAD    0xF800

// --- Small helpers ---
void panel(int x,int y,int w,int h,uint16_t outline,uint16_t fill,int r=6){
  sprite.fillRoundRect(x,y,w,h,r,fill);
  sprite.drawRoundRect(x,y,w,h,r,outline);
}
void labelValTL(const char* label, const String& val, int x, int y, uint16_t col=COL_TEXT) {
  sprite.setTextDatum(TL_DATUM);
  sprite.setTextSize(1);
  sprite.setTextColor(COL_MUTED, COL_BG);
  sprite.drawString(label, x, y);
  sprite.setTextSize(2);
  sprite.setTextColor(col, COL_BG);
  sprite.drawString(val, x, y+14);
}
// Simple outdoor AQ color mapping (you can refine thresholds per app note)
uint16_t colorForOutdoorAQ(float oaq) {
  if (isnan(oaq))            return COL_MUTED;
  if (oaq <= 50)             return COL_GOOD;  // good
  if (oaq <= 100)            return COL_WARN;  // moderate
  return COL_BAD;                             // poor
}

void drawHeader(){
  sprite.setTextDatum(TC_DATUM);
  sprite.setTextColor(COL_TEXT, COL_BG);
  sprite.setTextSize(2);
  sprite.drawString("Nicla Sense Env — T‑Display S3 Long", 320, 8);
}
void drawLeftCard(){
  panel(10, 30, 220, 140, COL_FRAME, COL_PANEL, 8);
  sprite.setTextDatum(TL_DATUM);
  sprite.setTextSize(1);
  sprite.setTextColor(COL_MUTED, COL_PANEL);
  sprite.drawString("Sensors & Links", 20, 40);
  sprite.setTextColor(COL_TEXT, COL_PANEL);
  sprite.drawString("HS4001: Temp / Humidity", 20, 56);          // user manual
  sprite.drawString("ZMOD4410: TVOC, eCO2, IAQ", 20, 72);        // elevator note
  sprite.drawString("ZMOD4510: NO2, O3, Outdoor AQ", 20, 88);    // env. monitor note
  sprite.setTextColor(COL_MUTED, COL_PANEL);
  sprite.drawString("I2C (ESLOV) @ 3.3 V", 20, 112);             // user manual
  sprite.drawString("Arduino_NiclaSenseEnv", 20, 128);           // official lib
}

void drawBigTRH(float tC, float rh){
  panel(240, 40, 390, 70, COL_FRAME, 0x0010, 8);
  sprite.setTextDatum(MC_DATUM);
  sprite.setTextColor(COL_CYAN, 0x0010);
  sprite.setTextSize(4);
  char buf[64];
  if (!isnan(tC) && !isnan(rh)) snprintf(buf, sizeof(buf), "%.2f °C  |  %.1f %%RH", tC, rh);
  else snprintf(buf, sizeof(buf), "--.-- °C  |  --.- %%RH");
  sprite.drawString(buf, 240+195, 40+35);
}

// Render all values per the two app notes (indoor vs outdoor)
void drawMetrics(
  float tvoc_ppb, float eco2_ppm, float iaq_in, float odor_idx, float ethanol_idx,
  float no2_ppb, float o3_ppb,   float oaq
){
  // IAQ (indoor) and Outdoor AQ on the same row (right side)
  labelValTL("Indoor IAQ",  isnan(iaq_in) ? "--" : String(iaq_in, 1),
             240, 118, COL_WARN);  // color band like outdoor if you wish

  labelValTL("Outdoor AQ",  isnan(oaq) ? "--" : String(oaq, 1),
             420, 118, colorForOutdoorAQ(oaq));

  // Indoor gas metrics
  labelValTL("TVOC (ppb)",   isnan(tvoc_ppb)   ? "--" : String(tvoc_ppb, 0), 240, 150);
  labelValTL("eCO2 (ppm)",   isnan(eco2_ppm)   ? "--" : String(eco2_ppm, 0), 420, 150);
  labelValTL("Odor idx",     isnan(odor_idx)   ? "--" : String(odor_idx,2),  240, 186);
  labelValTL("Ethanol idx",  isnan(ethanol_idx)? "--" : String(ethanol_idx,2),420, 186);

  // Outdoor pollutants
  labelValTL("NO2 (ppb)",    isnan(no2_ppb)    ? "--" : String(no2_ppb, 0),  240, 222);
  labelValTL("O3 (ppb)",     isnan(o3_ppb)     ? "--" : String(o3_ppb, 0),   420, 222);
}

void showStatus(const char* msg){
  const int x=10, y=176-22, w=220, h=16;
  panel(x,y,w,h, COL_FRAME, COL_PANEL, 6);
  sprite.setTextDatum(MC_DATUM);
  sprite.setTextColor(COL_TEXT, COL_PANEL);
  sprite.setTextSize(1);
  sprite.drawString(msg, x+w/2, y+h/2);
}

void drawFrame(
  float tC, float rh,
  float tvoc_ppb, float eco2_ppm, float iaq_in, float odor_idx, float ethanol_idx,
  float no2_ppb, float o3_ppb, float oaq,
  const char* status
){
  sprite.fillSprite(COL_BG);
  drawHeader();
  drawLeftCard();
  drawBigTRH(tC, rh);
  drawMetrics(tvoc_ppb, eco2_ppm, iaq_in, odor_idx, ethanol_idx, no2_ppb, o3_ppb, oaq);
  showStatus(status);
  lcd_PushColors_rotated_90(0, 0, 640, 180, (uint16_t*)sprite.getPointer());
}

void setup() {
  Serial.begin(115200);

  // Display init
  pinMode(TFT_BL, OUTPUT);
  digitalWrite(TFT_BL, LOW);
  axs15231_init();
  sprite.createSprite(640, 180);
  sprite.setSwapBytes(1);
  lcd_fill(0, 0, 180, 640, 0x0000);
  digitalWrite(TFT_BL, HIGH);

  // I2C init
  Wire.begin(I2C_SDA_PIN, I2C_SCL_PIN);
  Wire.setClock(400000);

  // Nicla begin (official library)
  const char* status = "Nicla OK";
  if (!nicla.begin()) {                                        // library init
    status = "Nicla not found (I2C)";
    drawFrame(NAN, NAN, NAN,NAN,NAN,NAN,NAN, NAN,NAN, NAN, status);
    delay(3000);
  }

  // Optional: run a 'cleaning' or default mode if library exposes it.
  // nicla.setIndoorMode(NSE_INDOOR_IAQ_2G);   // example only (check examples)  [5](http://www.ulisp.com/show?4H2I)
  // nicla.setOutdoorMode(NSE_OUTDOOR_AQ);     // example only (check examples)

  drawFrame(NAN, NAN, NAN,NAN,NAN,NAN,NAN, NAN,NAN, NAN, status);
}

void loop() {
  // Read all main metrics — names follow lib examples (adjust if your version differs)
  float tC      = nicla.readTemperature();         // HS4001  [5](http://www.ulisp.com/show?4H2I)
  float rh      = nicla.readHumidity();            // HS4001  [5](http://www.ulisp.com/show?4H2I)

  float tvoc    = nicla.readTVOC();                // ZMOD4410 (TVOC, ppb)      [5](http://www.ulisp.com/show?4H2I)
  float eco2    = nicla.readECO2();                // ZMOD4410 (ppm est.)       [4](https://docs.arduino.cc/tutorials/nicla-sense-env/elevator-monitoring-application-note/)
  float iaq_in  = nicla.readIndoorAirQuality();    // ZMOD4410 (index)          [4](https://docs.arduino.cc/tutorials/nicla-sense-env/elevator-monitoring-application-note/)
  float odor    = nicla.readOdorIndex();           // ZMOD4410 (index)          [5](http://www.ulisp.com/show?4H2I)
  float ethanol = nicla.readEthanolIndex();        // ZMOD4410 (index)          [5](http://www.ulisp.com/show?4H2I)

  float no2     = nicla.readNO2();                 // ZMOD4510 (ppb)            [3](https://docs.arduino.cc/tutorials/nicla-sense-env/environmental-monitor-application-note/)
  float o3      = nicla.readO3();                  // ZMOD4510 (ppb)            [3](https://docs.arduino.cc/tutorials/nicla-sense-env/environmental-monitor-application-note/)
  float oaq     = nicla.readOutdoorAirQuality();   // ZMOD4510 (index)          [3](https://docs.arduino.cc/tutorials/nicla-sense-env/environmental-monitor-application-note/)

  // If you want to mirror Outdoor AQ color on Nicla’s RGB LED (app note idea):
  // uint16_t c = colorForOutdoorAQ(oaq);  // 565 color → convert to (r,g,b) 0..255 and set via lib
  // nicla.setRgbLed(r, g, b);             // example only (check lib for exact call)  [3](https://docs.arduino.cc/tutorials/nicla-sense-env/environmental-monitor-application-note/)[5](http://www.ulisp.com/show?4H2I)

  drawFrame(tC, rh, tvoc, eco2, iaq_in, odor, ethanol, no2, o3, oaq, "Running");
  delay(1000);
}
