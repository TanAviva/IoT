// Minimal "TONY" display for LILYGO T-Display S3 Long (AXS15231B + LVGL)

// --- Includes (as used across repo examples) ---
#include <Arduino.h>
#include "lvgl.h"            // LVGL v8.3.x as per repo examples
#include "pins_config.h"     // Board pin definitions (incl. TFT_BL, resolution macros)
#include "AXS15231B.h"       // LILYGO display driver wrapping lcd_PushColors(), init

// --- LVGL draw buffers & display driver ---
static lv_disp_draw_buf_t draw_buf;
static lv_color_t *buf0;         // first frame buffer
static lv_color_t *buf1;         // second frame buffer

// LVGL flush: push 'color_p' rectangle to LCD using repo's lcd_PushColors()
static void my_disp_flush(lv_disp_drv_t *disp,
                          const lv_area_t *area,
                          lv_color_t *color_p)
{
  uint32_t w = (area->x2 - area->x1 + 1);
  uint32_t h = (area->y2 - area->y1 + 1);
  // lcd_PushColors is provided by AXS15231B driver in the repo
  lcd_PushColors(area->x1, area->y1, w, h, (uint16_t *)&color_p->full);
  lv_disp_flush_ready(disp);
}

void setup() {
  Serial.begin(115200);

  // 1) Initialize the LCD hardware (repo helper)
  axs15231_init();  // Sets up AXS15231B over QSPI and basic panel state
  // (This call and lcd_PushColors() come from AXS15231B.* in the repo)  //  [1](https://github.com/Xinyuan-LilyGO/T-Display-S3-Long/blob/master/examples/factory/factory.ino)
  // 2) Init LVGL
  lv_init();

  // 3) Allocate double buffers in PSRAM sized to full screen
  const uint32_t HRES = EXAMPLE_LCD_H_RES;   // provided by pins_config.h (e.g., 640)
  const uint32_t VRES = EXAMPLE_LCD_V_RES;   // provided by pins_config.h (e.g., 180)
  size_t pix_cnt = HRES * VRES;
  size_t buf_bytes = pix_cnt * sizeof(lv_color_t);

  buf0 = (lv_color_t *)ps_malloc(buf_bytes);
  buf1 = (lv_color_t *)ps_malloc(buf_bytes);
  if (!buf0 || !buf1) {
    Serial.println("LVGL buffer alloc failed");
    for(;;) delay(1000);
  }
  lv_disp_draw_buf_init(&draw_buf, buf0, buf1, pix_cnt);

  // 4) Register display driver with LVGL
  static lv_disp_drv_t disp_drv;
  lv_disp_drv_init(&disp_drv);
  disp_drv.hor_res   = HRES;
  disp_drv.ver_res   = VRES;
  disp_drv.flush_cb  = my_disp_flush;
  disp_drv.draw_buf  = &draw_buf;

  // The repo often uses software rotation (90Â°) with full_refresh = 1.
  // If you need the "long" (wide) orientation like examples, enable:
  disp_drv.sw_rotate   = 1;           // repo guidance: don't change LVGL if using sw_rotate
  disp_drv.rotated     = LV_DISP_ROT_90;
  disp_drv.full_refresh = 1;          // required when sw_rotate is on  //  [1](https://github.com/Xinyuan-LilyGO/T-Display-S3-Long/blob/master/examples/factory/factory.ino)

  lv_disp_t *disp = lv_disp_drv_register(&disp_drv);

  // 5) Turn on the backlight
  pinMode(TFT_BL, OUTPUT);
  digitalWrite(TFT_BL, HIGH);  // backlight on (as done in repo examples)  //  [1](https://github.com/Xinyuan-LilyGO/T-Display-S3-Long/blob/master/examples/factory/factory.ino)

  // 6) Make screen background WHITE
  lv_obj_set_style_bg_color(lv_scr_act(), lv_color_white(), LV_PART_MAIN);
  lv_obj_set_style_bg_opa(lv_scr_act(), LV_OPA_COVER, LV_PART_MAIN);

  // 7) Create a centered label "Tony" (black text on white bg)
  lv_obj_t *label = lv_label_create(lv_scr_act());
  lv_label_set_text(label, "Tony");
  lv_obj_set_style_text_color(label, lv_color_black(), LV_PART_MAIN);
  lv_obj_center(label);
}

void loop() {
  // Let LVGL handle timers and rendering; call frequently
  lv_timer_handler();  // or lv_task_handler() in older LVGL
  delay(5);
}
